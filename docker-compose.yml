version: "3.8"
services:
  mongodb:
    build:
      context: "."
      dockerfile: "./mongodb-Dockerfile"
    restart: always
    networks:
      - backend
    volumes:
      - ~/wmd-data/mongodb:/data/db
  controller:
    build: "./controller"
    restart: always
    expose:
      - 8080
    environment:
      MONGO_CONN_STRING: mongodb://mongodb
      WAIT_HOSTS: mongodb:27017
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 10
      WAIT_HOST_CONNECT_TIMEOUT: 30
      VIRTUAL_HOST: ${SERVER_VIRTUAL_HOST}
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: ${SERVER_VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${DEFAULT_EMAIL}
    networks:
      - backend
  webapp:
    restart: always
    build: "./webapp"
    expose:
      - 80
    environment:
      VIRTUAL_HOST: ${WEB_VIRTUAL_HOST}
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: ${WEB_VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${DEFAULT_EMAIL}
    networks:
      - backend
  nginx-proxy-letsencrypt:
    image: "jrcs/letsencrypt-nginx-proxy-companion:latest"
    restart: always
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DEFAULT_EMAIL: ${DEFAULT_EMAIL}
  nginx-proxy:
    image: "jwilder/nginx-proxy:alpine"
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - backend
networks:
  backend:
    driver: bridge
